{"version":3,"sources":["components/preview.js","components/formbuilder.js","App.js","reportWebVitals.js","index.js"],"names":["Preview","Formbuilder","React","useState","questionsList","setQuestionsList","question","questionTitle","answerType","noOfAnswers","answersList","isRequired","addQuestion","className","Box","component","sx","m","width","margin","noValidate","autoComplete","TextField","id","label","variant","map","index","Button","onClick","App","value","setValue","bgcolor","Tabs","onChange","event","newValue","centered","Tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAEaA,EAAU,WACnB,OACI,gE,0BCAKC,G,MAAc,WACzB,MAA0CC,IAAMC,SAAS,IAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,CACfC,cAAe,GACfC,WAAY,GACZC,YAAa,EACbC,YAAa,GACbC,YAAY,GAGRC,EAAc,WAClBP,EAAiB,GAAD,mBAAKD,GAAL,CAAoBE,MAGtC,OACE,qBAAKO,UAAU,uBAAf,SACE,eAACC,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,IAAKC,MAAO,OAAQC,OAAQ,cAEtDC,YAAU,EACVC,aAAa,MANf,UAQE,cAACC,EAAA,EAAD,CACEC,GAAG,YACHC,MAAM,aACNC,QAAQ,YACJ,qBAEN,cAACH,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,8BACNC,QAAQ,aAEV,8BACGrB,EAAcsB,KAAI,SAACpB,EAAUqB,GAC5B,OACE,sBAAiBd,UAAU,gBAA3B,UACE,cAACS,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAK,mBAAcG,EAAQ,GAC3BF,QAAQ,aAEV,sBAAKZ,UAAU,mBAAf,UACE,cAACe,EAAA,EAAD,CACEH,QAAQ,YACR,aAAW,0BACXI,QAASjB,EAHX,uBAOA,cAACgB,EAAA,EAAD,CACEH,QAAQ,YACR,aAAW,0BACXI,QAASjB,EAHX,oBAOA,cAACgB,EAAA,EAAD,CACEH,QAAQ,YACR,aAAW,0BACXI,QAASjB,EAHX,4BArBMe,QAiChB,cAACC,EAAA,EAAD,CACEH,QAAQ,YACR,aAAW,0BACXI,QAASjB,EAHX,iCC7COkB,MAzBf,WACE,MAA0B5B,WAAe,GAAzC,mBAAO6B,EAAP,KAAcC,EAAd,KAMA,OACE,sBAAKnB,UAAU,UAAf,UACE,6DACA,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAKE,GAAI,CAAEE,MAAO,OAAQe,QAAS,oBAAnC,SACE,eAACC,EAAA,EAAD,CAAMH,MAAOA,EAAOI,SAVT,SAACC,EAAOC,GAC3BL,EAASK,IAS2CC,UAAQ,EAApD,UACE,cAACC,EAAA,EAAD,CAAKf,MAAM,eACX,cAACe,EAAA,EAAD,CAAKf,MAAM,iBAGdO,EAAQ,cAAC,EAAD,IAAc,cAAC,EAAD,aCZlBS,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d211d651.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Preview = () => {\r\n    return (\r\n        <div>\r\n           You have no Forms to Preview\r\n        </div>\r\n    )\r\n}\r\n","import { Box, TextField, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./formbuilder.css\";\r\n\r\nexport const Formbuilder = () => {\r\n  const [questionsList, setQuestionsList] = React.useState([]);\r\n\r\n  const question = {\r\n    questionTitle: \"\",\r\n    answerType: \"\",\r\n    noOfAnswers: 0,\r\n    answersList: [],\r\n    isRequired: false,\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setQuestionsList([...questionsList, question]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-builder-section\">\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          \"& > :not(style)\": { m: \"1\", width: \"28ch\", margin: \"28px 30px\" },\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          id=\"formTitle\"\r\n          label=\"Form Title\"\r\n          variant=\"standard\"\r\n          key=\"Confirmation Code\"\r\n        />\r\n        <TextField\r\n          id=\"formDescription\"\r\n          label=\"Form Description (Optional)\"\r\n          variant=\"standard\"\r\n        />\r\n        <div>\r\n          {questionsList.map((question, index) => {\r\n            return (\r\n              <div key={index} className=\"each-question\">\r\n                <TextField\r\n                  id=\"formDescription\"\r\n                  label={`Question ${index + 1}`}\r\n                  variant=\"standard\"\r\n                />\r\n                <div className=\"button-container\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    aria-label=\"outlined primary button\"\r\n                    onClick={addQuestion}\r\n                  >\r\n                    Duplicate\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    aria-label=\"outlined primary button\"\r\n                    onClick={addQuestion}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    aria-label=\"outlined primary button\"\r\n                    onClick={addQuestion}\r\n                  >\r\n                    Mandatory\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          aria-label=\"outlined primary button\"\r\n          onClick={addQuestion}\r\n        >\r\n          Add Question\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\nimport { Box, Tabs, Tab } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { Preview } from \"./components/preview\";\nimport { Formbuilder } from \"./components/formbuilder\";\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1>Welcome to Form Builder App</h1>\n      <div className=\"form-outer-section\">\n        <div className=\"form-section\">\n          <Box sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n            <Tabs value={value} onChange={handleChange} centered>\n              <Tab label=\"Build Form\" />\n              <Tab label=\"Preview\" />\n            </Tabs>\n          </Box>\n          {value ? <Preview /> : <Formbuilder />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}